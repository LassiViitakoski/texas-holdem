/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as RegisterIndexImport } from './routes/register/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as GamesIndexImport } from './routes/games/index'
import { Route as ActiveGamesIndexImport } from './routes/activeGames/index'
import { Route as GamesRoomImport } from './routes/games/room'
import { Route as GamesCreateImport } from './routes/games/create'
import { Route as GamesGameIdImport } from './routes/games/$gameId'
import { Route as GamesRoomGameIdImport } from './routes/games/room/$gameId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterIndexRoute = RegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const GamesIndexRoute = GamesIndexImport.update({
  id: '/games/',
  path: '/games/',
  getParentRoute: () => rootRoute,
} as any)

const ActiveGamesIndexRoute = ActiveGamesIndexImport.update({
  id: '/activeGames/',
  path: '/activeGames/',
  getParentRoute: () => rootRoute,
} as any)

const GamesRoomRoute = GamesRoomImport.update({
  id: '/games/room',
  path: '/games/room',
  getParentRoute: () => rootRoute,
} as any)

const GamesCreateRoute = GamesCreateImport.update({
  id: '/games/create',
  path: '/games/create',
  getParentRoute: () => rootRoute,
} as any)

const GamesGameIdRoute = GamesGameIdImport.update({
  id: '/games/$gameId',
  path: '/games/$gameId',
  getParentRoute: () => rootRoute,
} as any)

const GamesRoomGameIdRoute = GamesRoomGameIdImport.update({
  id: '/$gameId',
  path: '/$gameId',
  getParentRoute: () => GamesRoomRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/games/$gameId': {
      id: '/games/$gameId'
      path: '/games/$gameId'
      fullPath: '/games/$gameId'
      preLoaderRoute: typeof GamesGameIdImport
      parentRoute: typeof rootRoute
    }
    '/games/create': {
      id: '/games/create'
      path: '/games/create'
      fullPath: '/games/create'
      preLoaderRoute: typeof GamesCreateImport
      parentRoute: typeof rootRoute
    }
    '/games/room': {
      id: '/games/room'
      path: '/games/room'
      fullPath: '/games/room'
      preLoaderRoute: typeof GamesRoomImport
      parentRoute: typeof rootRoute
    }
    '/activeGames/': {
      id: '/activeGames/'
      path: '/activeGames'
      fullPath: '/activeGames'
      preLoaderRoute: typeof ActiveGamesIndexImport
      parentRoute: typeof rootRoute
    }
    '/games/': {
      id: '/games/'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof GamesIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/games/room/$gameId': {
      id: '/games/room/$gameId'
      path: '/$gameId'
      fullPath: '/games/room/$gameId'
      preLoaderRoute: typeof GamesRoomGameIdImport
      parentRoute: typeof GamesRoomImport
    }
  }
}

// Create and export the route tree

interface GamesRoomRouteChildren {
  GamesRoomGameIdRoute: typeof GamesRoomGameIdRoute
}

const GamesRoomRouteChildren: GamesRoomRouteChildren = {
  GamesRoomGameIdRoute: GamesRoomGameIdRoute,
}

const GamesRoomRouteWithChildren = GamesRoomRoute._addFileChildren(
  GamesRoomRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/games/$gameId': typeof GamesGameIdRoute
  '/games/create': typeof GamesCreateRoute
  '/games/room': typeof GamesRoomRouteWithChildren
  '/activeGames': typeof ActiveGamesIndexRoute
  '/games': typeof GamesIndexRoute
  '/login': typeof LoginIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/register': typeof RegisterIndexRoute
  '/games/room/$gameId': typeof GamesRoomGameIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/games/$gameId': typeof GamesGameIdRoute
  '/games/create': typeof GamesCreateRoute
  '/games/room': typeof GamesRoomRouteWithChildren
  '/activeGames': typeof ActiveGamesIndexRoute
  '/games': typeof GamesIndexRoute
  '/login': typeof LoginIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/register': typeof RegisterIndexRoute
  '/games/room/$gameId': typeof GamesRoomGameIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/games/$gameId': typeof GamesGameIdRoute
  '/games/create': typeof GamesCreateRoute
  '/games/room': typeof GamesRoomRouteWithChildren
  '/activeGames/': typeof ActiveGamesIndexRoute
  '/games/': typeof GamesIndexRoute
  '/login/': typeof LoginIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/games/room/$gameId': typeof GamesRoomGameIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/games/$gameId'
    | '/games/create'
    | '/games/room'
    | '/activeGames'
    | '/games'
    | '/login'
    | '/profile'
    | '/register'
    | '/games/room/$gameId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/games/$gameId'
    | '/games/create'
    | '/games/room'
    | '/activeGames'
    | '/games'
    | '/login'
    | '/profile'
    | '/register'
    | '/games/room/$gameId'
  id:
    | '__root__'
    | '/'
    | '/games/$gameId'
    | '/games/create'
    | '/games/room'
    | '/activeGames/'
    | '/games/'
    | '/login/'
    | '/profile/'
    | '/register/'
    | '/games/room/$gameId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GamesGameIdRoute: typeof GamesGameIdRoute
  GamesCreateRoute: typeof GamesCreateRoute
  GamesRoomRoute: typeof GamesRoomRouteWithChildren
  ActiveGamesIndexRoute: typeof ActiveGamesIndexRoute
  GamesIndexRoute: typeof GamesIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GamesGameIdRoute: GamesGameIdRoute,
  GamesCreateRoute: GamesCreateRoute,
  GamesRoomRoute: GamesRoomRouteWithChildren,
  ActiveGamesIndexRoute: ActiveGamesIndexRoute,
  GamesIndexRoute: GamesIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/games/$gameId",
        "/games/create",
        "/games/room",
        "/activeGames/",
        "/games/",
        "/login/",
        "/profile/",
        "/register/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/games/$gameId": {
      "filePath": "games/$gameId.tsx"
    },
    "/games/create": {
      "filePath": "games/create.tsx"
    },
    "/games/room": {
      "filePath": "games/room.tsx",
      "children": [
        "/games/room/$gameId"
      ]
    },
    "/activeGames/": {
      "filePath": "activeGames/index.tsx"
    },
    "/games/": {
      "filePath": "games/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.ts"
    },
    "/profile/": {
      "filePath": "profile/index.ts"
    },
    "/register/": {
      "filePath": "register/index.ts"
    },
    "/games/room/$gameId": {
      "filePath": "games/room/$gameId.tsx",
      "parent": "/games/room"
    }
  }
}
ROUTE_MANIFEST_END */
